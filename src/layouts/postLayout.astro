---
import '@styles/main.pcss'
import Navigation from '@components/navigation.astro'
import Footer from '@components/footer.astro'
import authorList from '@data/authors.js'
import { menuList, menuList2, socialList } from '@data/nav.js'

export interface Props {
	title: string
}

const { title, author, date, description, postImg, imgByName, imgByUrl, imgSrc } = Astro.props.frontmatter

const authorInfo = authorList.find(item => (item.name === author))
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<meta name="description" content={description}>
	</head>
	<body>
		<div class="outer">
			<Navigation menuList={menuList} socialList={socialList} />
			<div class="post_bg" style={`background-image: url(${postImg})`}>
				<div class="post_bg_cite">
					<span>Photo by <a href={imgByUrl} target="_blank">{imgByName}</a> on <a href={imgSrc} target="_blank">Unsplash</a></span>
				</div>
			</div>

			<div class="post_pos container_l">
				<main>
					<div class="post_col">
						<header>
							<ul class="breadcrums">
								<li><a href="/blog">blog</a></li>
								<li>{title}</li>
							</ul>
							<h1 class="hero_title">{title}</h1>
							<p class="post_date">{date}</p>
						</header>

						<article>
							<slot />
						</article>

						<div class="author_sec">
							<h3 class="h2 hero_title">Author</h3>
							{authorInfo ?
								<div class="author_space">
									<div class="author_pic">
										<img src={authorInfo.img} alt={authorInfo.name}/>
									</div>
									<div class="author_txt">
										<h4 class="">{ authorInfo.name }</h4>
										<p class="">{ authorInfo.bio }</p>
									</div>
								</div>
							:
								<div class="author_space">
									<div class="author_txt">
										<h4 class="">{ author }</h4>
									</div>
								</div>
							}
						</div>
					</div>
				</main>
				{/* <aside></aside> */}
			</div>

			<Footer menuList={menuList} menuList2={menuList2} socialList={socialList} />
		</div>
	</body>
</html>

<style>
	@import '../styles/mediaQueries.pcss';

	.post_bg {
		width: 100%;
		min-height: 200px;
		background-size: cover;
		background-position: center;
		background-repeat: no-repeat;
		background-color: var(--color-grey-800);

		display: flex;
		justify-content: flex-end;
		align-items: flex-end;
		padding: var(--size-4);

		& .post_bg_cite {
			background-color: var(--color-grey-300);
			border: 2px solid var(--color-grey-500);
			border-radius: 8px;
			padding: var(--size-2) var(--size-3);
			font-size: var(--scale-00);
			max-width: 400px;
			opacity: .7;
			transition: opacity .3s;

			&:hover {
				opacity: 1;
			}
		}
	}

	.post_pos {
		& main {
			flex: 0 0 auto;
			width: 100%;
			max-width: var(--width-md);
			/* margin-top: -300px; */
			position: relative;
			z-index: 1;
	
			& .post_col {
				background-color: var(--color-white);
				padding-top: var(--size-6);
				padding-bottom: var(--size-6);
			}
		}

		& header {
			margin-bottom: var(--size-10);

			& .breadcrums {
				display: flex;
				justify-content: flex-start;
				align-items: center;

				& li {
					margin-right: var(--size-2);
					color: var(--color-grey);

					&:last-child {
						max-width: 230px;
						white-space: nowrap;
						overflow: hidden;
						text-overflow: ellipsis;
					}

					&::after {
						content: '/';
						margin-left: var(--size-2);
					}
				}
			}

			& .post_date {
				color: var(--color-grey);
			}
		}

		& article {
			font-family: Merriweather, sans-serif;
		}

		& aside {
			flex: 0 0 auto;
		}
	}

	@media (--xl) {
		.post_bg {
			min-height: 500px;
		}

		.post_pos {
			& main {
				margin-top: -300px;

				& .post_col{
					border-radius: 16px;
					padding-left: var(--size-8);
					padding-right: var(--size-12);
				}
			}
		}
	}

	.author_sec {
		margin-top: var(--size-24);

		& .author_space {
			display: flex;
			jusify-content: flex-start;
			align-items: flex-start;
			flex-wrap: wrap;

			margin-top: var(--size-12);

			& .author_pic {
				flex: 0 0 auto;
				margin-right: var(--size-6);

				& img {
					width: 150px;
					border-radius: 999px;
					border: 6px solid var(--color-orange);
				}
			}

			& .author_txt {
				flex: 1 1 200px;

				& h4 {
					font-weight: bold;
					margin-bottom: var(--size-2);
				}

				& p {
					line-height: 2;
				}
			}
		}
	}
</style>

<script>
	const codeBlocks = [...document.querySelectorAll('.astro-code')]
	for (const codeBlock of codeBlocks) {
		const btn = document.createElement('button')
		const textToCopy = codeBlock.textContent
		btn.classList.add('copy_btn')
		btn.innerText = 'copy'
		btn.addEventListener('click', () => {
			navigator.clipboard.writeText(textToCopy)
				.catch(err => {
					console.log('copy to clipboard failed: ', err)
				})
		})

		codeBlock.appendChild(btn)
	}
</script>

<style is:global>
	.astro-code {
		display: block;
		padding: var(--size-8) var(--size-4);
		margin: var(--size-6) 0;
		border-radius: var(--radius-xl);
		font-family: 'Ubuntu Mone', mono;
		position: relative;

		& button.copy_btn {
			content: 'copy';
			position: absolute;
			top: 6px;
			right: 6px;
			display: block;
			background-color: transparent;
			border: 2px solid var(--color-white);
			border-radius: 8px;
			color: var(--color-white);
			font-size: var(--scale-00);
			padding: var(--size-1) var(--size-2);
			opacity: .4;
			transition: opacity .3s;
			cursor: pointer;

			&:hover {
				opacity: 1;
			}
		}
	}

	article {
		& p {
			margin-bottom: var(--size-6);
			line-height: 2;
		}

		& code {
			padding: var(--size-2);
			border-radius: 4px;
			background-color: var(--color-grey-300);
		}

		& .astro-code code {
			background-color: transparent;
			padding: 0;
			border-radius: 0;
		}
	}
</style>
