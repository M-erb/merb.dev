---
export interface Props {
	id?: string
	num?: string
	removeUnderline?: boolean
	align?: string
	tag?: string
}

const { id, num, removeUnderline, align, tag } = Astro.props

type Heading = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'
const TitleElement = (tag ? tag : 'h3') as Heading
---

<div id={id || ''} class:list={['sec_title', {'__no_underline': removeUnderline}, {'__right': align === 'right'}]}>
	<TitleElement class="title"><slot />{num !== undefined ? <span class="super">/0{num}</span> : ''}</TitleElement>
</div>

<script>
</script>

<style lang="postcss">
	.sec_title {
		padding: var(--size-2) 0 var(--size-6);

		& .title {
			display: inline-block;
			text-transform: uppercase;
			font-size: var(--scale-5);
			font-weight: 700;
			line-height: 1;
			position: relative;

			@media (min-width: 480px) {
				font-size: var(--scale-6);
			}

			@media (min-width: 768px) {
				font-size: var(--scale-8);
			}

			&::after {
				content: '';
				position: absolute;
				bottom: -10px;
				left: 20%;
				width: 110%;
				height: 6px;
				border-radius: 99px;
				background-color: var(--color-blue);
				user-select: none;
			}
		}

		& .super {
			position: absolute;
			font-size: var(--scale-00);
			font-weight: 700;
			top: 0;
			right: -28px;
			user-select: none;
		}

		&.__no_underline {
			& .title::after {
				content: none;
			}
		}

		&.__right {
			& .title {
				text-align: right;
			}

			& .super {
				top: -16px;
				right: 0;
				user-select: none;
			}
		}
	}
</style>
