---
import Layout from '@layouts/Layout.astro'
import CustomBorderSec from '@components/customBorderSec.astro'
import ContactSec from '@components/contactSec.astro'
import { getCollection } from 'astro:content'
import { getImage } from 'astro:assets'
import type { GetImageResult } from 'astro'
import PostSearch from '@components/vue/postSearch.vue'
import { compareDesc as compareDescDate } from 'date-fns'
import heroImg from '@imgs/merb-og-home-min.png'

const hero = {
	url: heroImg.src,
	width: heroImg.width,
	height: heroImg.height
}

const blogPosts = await getCollection('blog', ({ data }) => ( data.draft !== true ))
const uniqueTags = [...new Set(blogPosts.map((post) => post.data.tags).flat())]
const uniqueCats = [...new Set(blogPosts.map((post) => post.data.category))]

const tags = uniqueTags.map(tag => {
	const filteredPosts = blogPosts.filter(post => post.data.tags.includes(tag))
	return {
		name: tag,
		count: filteredPosts.length
	}
})

const cats = uniqueCats.map(cat => {
	const filteredPosts = blogPosts.filter(post => post.data.category === cat)
	return {
		name: cat,
		count: filteredPosts.length
	}
})

export interface simplePost {
	title: string
	url: string
	img: GetImageResult
	date: Date
	excerpt: string
	tags: Array<string>
	category: string
}

const posts: Array<simplePost> = []
for (const post of blogPosts) {
	const { slug, data } = post
	const date = new Date(data.date)
	const optimizedPostImg = await getImage({ src: data.img.src as ImageMetadata, width: data.img.src.width, height: data.img.src.height })
	posts.push({
		title: data.title,
		url: `/blog/${slug}`,
		img: optimizedPostImg,
		date,
		excerpt: data.excerpt,
		tags: data.tags,
		category: data.category
	})
}

posts.sort((a, b) => {
	return compareDescDate(a.date, b.date)
})
---

<Layout title="Michael Erb's Blog" description="Michael Erb's technical blog in anything relating to software and the web" hero={hero}>
	<section class="hero">
		<div class="hero_inner container">
			<div class="hero_title_area">
				<div class="hero_titles">
					<h1 class="hero_title">Blog</h1>
					<h2 class="hero_title">Musings of a mad man</h2>
				</div>
			</div>
		</div>
	</section>

	<main>
		<CustomBorderSec top="curve_blue">
			<PostSearch posts={posts} tags={tags} cats={cats} client:visible />
		</CustomBorderSec>

		<ContactSec num={1} />
	</main>
</Layout>

<style lang="postcss">
	@import '@styles/mediaQueries.pcss';

	section.hero {
		display: flex;
		justify-content: center;
		align-items: flex-start;
		flex-direction: column;
		min-height: 300px;

		& .hero_inner {
			padding-top: var(--size-8);
			padding-bottom: var(--size-8);

			@media (--md) {
				padding-top: var(--size-16);
				padding-bottom: var(--size-16);
			}
		}

		& .hero_title_area {
			display: flex;
			justify-content: flex-start;
			align-items: flex-start;
			flex-wrap: wrap;

			& .hero_home_titles {
				flex: 1 1 auto;
				order: 2;
			}
		}
	}

	.posts_sec {
		min-height: 500px;
		padding-top: var(--size-2);
		padding-bottom: var(--size-6);
		min-height: 600px;
	}
</style>
